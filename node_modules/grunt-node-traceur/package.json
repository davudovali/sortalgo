{
  "name": "grunt-node-traceur",
  "description": "Compiles ECMAScript 6 (harmony) files, optionally merging and generating source maps. - Fork of grunt-traceur-build with mods I need",
  "version": "0.0.5",
  "author": {
    "name": "Aikar",
    "email": "aikar@aikar.co"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aikar/grunt-node-traceur.git"
  },
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "harmony",
    "esnext",
    "ecmascript6",
    "javascript6",
    "traceur"
  ],
  "dependencies": {
    "traceur": "0.0.4"
  },
  "readme": "# grunt-traceur-build\n\nGrunt task that uses google traceur compiler to build ECMAScript 6 (harmony) projects, optionally merging and generating source maps.\n\nThis is a fork of grunt-traceur-build that is improved to properly support using Traceur inside of Node.JS\nA few optimizations have been made to make it work properly in both node and browser.\n\n## Getting Started\n\n```shell\nnpm install grunt-node-traceur --save\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\nYou should not install this as a dev-dependency, and instead ship it with your application.\n\nThere may be need to load the Traceur runtime to use the generated code, so you will need this\nmodule in production\n\n```js\ngrunt.loadNpmTasks('grunt-node-traceur');\n```\n\n## The \"traceur_build\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `traceur` to the data object passed into `grunt.initConfig()`. Eg:\n\n```js\ngrunt.initConfig({\n  traceur: {\n    options: {\n      wrap: { // wraps the built files into a anonymous function that has\n              // a binds 'expression' to 'param'. In the example below:\n              // (function(exports) {\n              //  /* code */\n              // })(window.mymodule = {});\n        param: 'exports',\n        expression: 'window.mymodule = {}'\n      },\n      sourceMaps: true,\n      deferredFunctions: true\n    },\n    project: {\n      cwd: 'src',\n      src: '**/*.js',\n      dest: './build/build.js'\n    },\n  },\n})\n```\n\n### Options\n\nAlmost all options are passed to the traceur compiler directly, see the section\nbelow for the default values.\n\nKeep in mind that when a javascript file(any name ending with .js) is specified\nas the destination, the task will build and combine everything into one file,\ntaking into consideration 'import' statements to resolve dependencies and put\nthe files in the correct order.\n\nIt will by default generate source maps for debugging(as far as I know only\ngoogle chrome and \n[node-inspector](https://github.com/node-inspector/node-inspector) support this\nfeature. In node.js, stack traces will display the original filenames/location\nif you install the [node-source-map-support](https://github.com/evanw/node-source-map-support) package\n\n### Usage Examples\n\n#### Default Options\n\n```js\ngrunt.initConfig({\n  traceur: {\n    options: {\n      debug: false,\n      sourceMaps: true,\n      freeVariableChecker: false,\n      validate: false,\n      strictSemicolons: false,\n      unstarredGenerators: false,\n      ignoreNolint: false,\n      arrayComprehension: true,\n      arrowFunctions: true,\n      classes: true,\n      defaultParameters: true,\n      destructuring: true,\n      forOf: true,\n      propertyMethods: true,\n      propertyNameShorthand: true,\n      templateLiterals: true,\n      restParameters: true,\n      spread: true,\n      generatorComprehension: true,\n      generators: true,\n      modules: true,\n      blockBinding: false,\n      privateNameSyntax: false,\n      privateNames: false,\n      cascadeExpression: false,\n      trapMemberLookup: false,\n      deferredFunctions: false,\n      propertyOptionalComma: false,\n      types: false\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n})\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/aikar/grunt-node-traceur/issues"
  },
  "_id": "grunt-node-traceur@0.0.5",
  "dist": {
    "shasum": "ea6c4781b0eca99a171545bf94134104793ccb2e",
    "tarball": "http://registry.npmjs.org/grunt-node-traceur/-/grunt-node-traceur-0.0.5.tgz"
  },
  "_from": "grunt-node-traceur@0.0.5",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "aikar",
    "email": "aikar@aikar.co"
  },
  "maintainers": [
    {
      "name": "aikar",
      "email": "aikar@aikar.co"
    }
  ],
  "directories": {},
  "_shasum": "ea6c4781b0eca99a171545bf94134104793ccb2e",
  "_resolved": "https://registry.npmjs.org/grunt-node-traceur/-/grunt-node-traceur-0.0.5.tgz",
  "homepage": "https://github.com/aikar/grunt-node-traceur#readme"
}
